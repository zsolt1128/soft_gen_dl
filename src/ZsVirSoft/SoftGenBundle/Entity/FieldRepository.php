<?php

namespace App\ZsVirSoft\SoftGenBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * FieldRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FieldRepository extends EntityRepository
{
	public function deleteAll($user)	
	{
		$em = $this->getEntityManager("soft_gen");
		$query = $em
			->createQuery('
			DELETE FROM ZsVirSoftSoftGenBundle:Field fi
			WHERE fi.id IN (
				SELECT f.id 
				FROM ZsVirSoftSoftGenBundle:Field f
				LEFT OUTER JOIN ZsVirSoftSoftGenBundle:Gentable g
				WITH (f.gentable = g)
				WHERE g.users = :users
			)	
			')->setParameter('users', $user); 
		try {
			return $query->getResult();
		} catch (\Doctrine\ORM\NoResultException $e) {
			return null;
		}
	}	

	public function findFields($user)	
	{
		$em = $this->getEntityManager("soft_gen");
		$query = $em
			->createQuery('
				SELECT f.id id, f.namepub, f.name, g.id gentable_id, g.namepub gentable, ge.id combotable_id, ge.namepub combotable, 
					   t.id type_id, t.name type, f.prec, f.shows, f.allowempty 
				FROM ZsVirSoftSoftGenBundle:Field f
				LEFT OUTER JOIN ZsVirSoftSoftGenBundle:Gentable g
				WITH (f.gentable = g)
				LEFT OUTER JOIN ZsVirSoftSoftGenBundle:Type t
				WITH (f.type = t)
				LEFT OUTER JOIN ZsVirSoftSoftGenBundle:Gentable ge
				WITH (f.combotable = ge)
				WHERE g.users = :users
				ORDER BY f.id
			')->setParameter('users', $user); 
		try {
			return $query->getResult();
		} catch (\Doctrine\ORM\NoResultException $e) {
			return null;
		}
	}	

	public function findField($user, $id)	
	{
		$em = $this->getEntityManager("soft_gen");
		$query = $em
			->createQuery('
				SELECT f
				FROM ZsVirSoftSoftGenBundle:Field f
				LEFT OUTER JOIN ZsVirSoftSoftGenBundle:Gentable g
				WITH (f.gentable = g)
				WHERE g.users = :users and f.id = :id
			')->setParameters(array( 'users' => $user, 'id' => $id )); 
		try {
			return $query->getResult();
		} catch (\Doctrine\ORM\NoResultException $e) {
			return null;
		}
	}	
}




// 
// 
    // /**
     // * @var integer
     // *
     // * @ORM\Column(name="id", type="integer")
     // * @ORM\Id
     // * @ORM\GeneratedValue(strategy="AUTO")
     // */
    // private $id;
// 
    // /**
     // * @var integer
     // *
     // * @ORM\Column(name="recid", type="integer", nullable=false)
     // */
    // private $recid;
// 
    // /**
     // * @ORM\ManyToOne(targetEntity="Field", inversedBy="record")
     // * @ORM\JoinColumn(name="field_id", referencedColumnName="id", nullable=false)
     // */
    // protected $field;
// 
    // /**
     // * @var string
     // *
     // * @ORM\Column(name="value", type="string", length=255)
     // */
    // private $value;
//  
    // /**
     // * @var integer
     // *
     // * @ORM\Column(name="integer", type="integer", nullable=true)
     // */
    // private $integer;
// 
    // /**
     // * @var boolean
     // *
     // * @ORM\Column(name="admin", type="boolean", nullable=true)
     // */
    // private $admin;    
// 
// namespace ZsVirSoft\SoftGenBundle\Entity;
// 
// use Doctrine\ORM\EntityRepository;
// 
// /**
 // * RecordRepository
 // *
 // * This class was generated by the Doctrine ORM. Add your own custom
 // * repository methods below.
 // */
// class RecordRepository extends EntityRepository
// {
	// public function findMaxId($gentable, $admin)
	// {
		// $em = $this->getEntityManager("soft_gen");
		// $query = $em
			// ->createQuery('
				// SELECT max(r.recid)
				// FROM ZsVirSoftSoftGenBundle:Record r
				// LEFT OUTER JOIN ZsVirSoftSoftGenBundle:Field f
				// WITH (r.field = f.id)
				// WHERE f.gentable = :gentable and r.admin = :admin
			// ')->setParameters(array( 'gentable' => $gentable, 'admin' => $admin )); 
		// try {
			// return $query->getResult();
		// } catch (\Doctrine\ORM\NoResultException $e) {
			// return null;
		// }
	// }
// 
	// public function findRecords($gentable, $recid, $admin)	
	// {
		// $em = $this->getEntityManager("soft_gen");
		// $query = $em
			// ->createQuery('
				// SELECT r
				// FROM ZsVirSoftSoftGenBundle:Record r
				// LEFT OUTER JOIN ZsVirSoftSoftGenBundle:Field f
				// WITH (r.field = f.id)
				// WHERE f.gentable = :gentable and r.recid = :recid and r.admin = :admin
			// ')->setParameters(array( 'gentable' => $gentable, 'recid' => $recid, 'admin' => $admin )); 
		// try {
			// return $query->getResult();
		// } catch (\Doctrine\ORM\NoResultException $e) {
			// return null;
		// }
	// }
// 
	// public function findAllRecords($gentable, $admin)
	// {
		// $em = $this->getEntityManager("soft_gen");
		// $query = $em
			// ->createQuery('
				// SELECT r
				// FROM ZsVirSoftSoftGenBundle:Record r
				// LEFT OUTER JOIN ZsVirSoftSoftGenBundle:Field f
				// WITH (r.field = f.id)
				// WHERE f.gentable = :gentable and r.admin = :admin
				// ORDER BY r.recid, f.id
			// ')->setParameters(array( 'gentable' => $gentable, 'admin' => $admin )); 
		// try {
			// return $query->getResult();
		// } catch (\Doctrine\ORM\NoResultException $e) {
			// return null;
		// }
	// }
// 	
	// public function findRecIds($gentable, $admin)
	// {
		// $em = $this->getEntityManager("soft_gen");
		// $query = $em
			// ->createQuery('
				// SELECT DISTINCT r.recid
				// FROM ZsVirSoftSoftGenBundle:Record r
				// LEFT OUTER JOIN ZsVirSoftSoftGenBundle:Field f
				// WITH (r.field = f.id)
				// WHERE f.gentable = :gentable and r.admin = :admin
				// ORDER BY r.recid
			// ')->setParameters(array( 'gentable' => $gentable, 'admin' => $admin )); 
		// try {
			// return $query->getResult();
		// } catch (\Doctrine\ORM\NoResultException $e) {
			// return null;
		// }
	// }
// 	
	// // a record táblában megnézi, hogy a típusnévhez milyen recid tartozik
	// public function findRecId($user, $type)	
	// {
		// $em = $this->getEntityManager("soft_gen");
		// $query = $em
			// ->createQuery('
				// SELECT r.recid
				// FROM ZsVirSoftSoftGenBundle:Record r
				// LEFT OUTER JOIN ZsVirSoftSoftGenBundle:Field f
				// WITH (r.field = f.id)
				// LEFT OUTER JOIN ZsVirSoftSoftGenBundle:Gentable g
				// WITH (f.gentable = g.id)
				// WHERE r.value = :type and g.users = :user and g.name= :t and f.name= :name
			// ')->setParameters(array( 'type' => $type, 'user' => $user, 't' => 'type', 'name' => 'name' )); 
		// try {
			// return $query->getResult();
		// } catch (\Doctrine\ORM\NoResultException $e) {
			// return null;
		// }
	// }
// 
// // 
// // select recid from record, gentable, field, users
// // where 
// // record.field_id=field.id and 
// // field.gentable_id=gentable.id and 
// // gentable.users_id=users.id and 
// // users.email='webmaster@terp.hu' and
// // gentable.name='type' and 
// // field.name='name'and 
// // record.value='integer'
// 
// 
// 
// 
// 
// 
	// // a record táblában megnézi, hogy a megadott recid esetén mi a típus id-je
	// public function findTypeId($user, $recid)	
	// {
		// $em = $this->getEntityManager("soft_gen");
		// $query = $em
			// ->createQuery('
				// SELECT r.value
				// FROM ZsVirSoftSoftGenBundle:Record r
				// LEFT OUTER JOIN ZsVirSoftSoftGenBundle:Field f
				// WITH (r.field = f)
				// LEFT OUTER JOIN ZsVirSoftSoftGenBundle:Gentable g
				// WITH (f.gentable = g)
				// WHERE r.recid = :recid and g.users = :user and f.name= :id and g.name = :type
			// ')->setParameters(array( 'recid' => $recid, 'user' => $user, 'id' => 'id', 'type' => 'type')); 
		// try {
			// return $query->getResult();
		// } catch (\Doctrine\ORM\NoResultException $e) {
			// return null;
		// }
